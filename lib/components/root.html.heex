<!DOCTYPE html>
<html lang="en">

<head>
  <meta name="description" content="Webpage description goes here" />
  <meta charset="utf-8">
  <title>title</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<body>
  <script>
        const wsUrl = "<%= @ws_address %>";
        const socket = new WebSocket(wsUrl);
        socket.onopen = function(event) {
            document.querySelectorAll(`[class^="tmnnevent-"], [class*=" tmnnevent-"]`).forEach(elem => {
              const classes = elem.className.split(/\s+/).filter(c => c)
              classes.forEach(className => {
                const methodName = className.slice(className.lastIndexOf("-")+1)
                const eventName = className.slice(12, -methodName.length - 1)
                elem.addEventListener(eventName, e => {
                  socket.send(JSON.stringify({
                    "method": methodName,
                    "val": e.target.value,
                    "element": e.target.outerHTML
                  }))
                })
              })
            })
        }

        socket.onmessage = function(event) {
            const diffs = JSON.parse(event.data);
            for (const [k, v] of Object.entries(diffs)) {
                if (k !== "error") {
                    document.querySelectorAll(`[class^="tmnn-${k}"], [class*=" tmnn-${k}"]`).forEach(elem => {
                        const classes = elem.className.split(/\s+/).filter(c => c)
                        classes.forEach(className => {
                            const attr = className.slice(className.lastIndexOf("-")+1)
                            switch (attr) {
                              case "innerHtml":
                                elem.innerHTML = v
                                break;
                              case "hidden":
                                elem.hidden = v
                                break;
                              default:
                                elem.setAttribute(attr, v)
                                break;
                            }
                      });
                    })
                }
            }
        };

        socket.onclose = function(event) {
            console.log("WebSocket is closed now.");
        };

        socket.onerror = function(error) {
            console.log("WebSocket error:", error);
        };
    </script> 
    <div class="container">
        <%= r.("app.html.heex") %>
    </div>
</body>
</html>